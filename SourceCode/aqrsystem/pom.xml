<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>eionet</groupId>
    <artifactId>aqrsystem</artifactId>
    <version>1.2.0</version>
    <packaging>war</packaging>
    <name>aqrsystem</name>

    
    <ciManagement>
        <system>hudson</system>
        <url>http://geoportal-dev.jrc.it/hudson/job/AQRSystem/</url>
    </ciManagement>

    <!-- GitHub Software Configuration Management -->
    <scm>
        <connection>scm:git:https://epuread:Em@nuel@@webgate.ec.europa.eu/CITnet/stash/projects/AQRTOOL/repos/aqrtool.git</connection>
        <developerConnection>scm:git:https://epuread:Em@nuel@@webgate.ec.europa.eu/CITnet/stash/projects/AQRTOOL/repos/aqrtool.git</developerConnection>
        <url>https://epuread:Em@nuel@@webgate.ec.europa.eu/CITnet/stash/projects/AQRTOOL/repos/aqrtool/browse</url>
    </scm>

    <distributionManagement>
        <repository>
            <id>dev.release</id>
            <url>file:${project.build.directory}/repository/</url>
        </repository>
    </distributionManagement>
    
    <build>
        <finalName>aqrsystem</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            
            <plugin> <!-- without this warnings are generated during the build -->
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                  <webResources>
                    <resource>
                      <directory>${basedir}/src/main/webapp/META-INF</directory>
                      <filtering>true</filtering>
                      <targetPath>META-INF</targetPath>
                      <includes>
                        <include>context.xml</include>
                      </includes>
                    </resource>
                    <resource>
                      <directory>${basedir}/db/changelog</directory>
                      <targetPath>WEB-INF/classes/db/changelog</targetPath>
                      <includes>
                        <include>*</include>
                      </includes>
                    </resource>
                  </webResources>
                </configuration>
            </plugin>
            
            <plugin> <!-- enabling deployments to the staging server -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <version>1.1</version>
                <configuration>
                    <url>${server.url}</url>
                    <server>${server.name}</server>
                    <path>/aqrsystem</path>
                </configuration>
            </plugin>
            
            <plugin> <!-- configuration of a plugin to execute SQL scripts -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <dependencies>
                    <dependency>
                        <groupId>${dependency.postgres.group.id}</groupId>
                        <artifactId>${dependency.postgres.artifact.id}</artifactId>
                        <version>${dependency.postgres.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <driver>${persistence.jdbc.driver}</driver>
                    <url>${persistence.jdbc.url}</url>
                    <username>${persistence.jdbc.username}</username>
                    <password>${persistence.jdbc.password}</password>
                </configuration>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <configuration>
                            <autocommit>true</autocommit>
                            <srcFiles>
                                <!-- drop existing tables and create the database -->
                                <srcFile>../aqrsql/create_aqd.sql</srcFile>
                                <!-- insert the codelist and additional informations about the user and system -->
                                <srcFile>../aqrsql/insert_aqd.sql</srcFile>
                                
                                <!--optional--> 
                                <srcFile>../aqrsql/UK_demos.sql</srcFile>
                            </srcFiles>                        
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
              <groupId>org.liquibase</groupId>
              <artifactId>liquibase-maven-plugin</artifactId>
              <version>3.4.2</version>
              <configuration>
                <changeLogFile>db/changelog/db.changelog-master.xml</changeLogFile>
                <driver>${persistence.jdbc.driver}</driver>
                <url>${persistence.jdbc.url}</url>
                <username>${persistence.jdbc.username}</username>
                <password>${persistence.jdbc.password}</password>
              </configuration>
            </plugin>
        </plugins>
        
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>        
    </build>
    
    <repositories>
        <repository>
            <id>project-local</id>
            <name>Internal Repository</name>
            <layout>default</layout>
            <url>file:///${basedir}/3rdparty</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

<!--
        <repository>
            <id>CITnet-nexus</id>  
            <url>https://webgate.ec.europa.eu/CITnet/nexus/content/repositories/ecas</url>
        </repository>
-->
        <repository>
            <id>eea</id>
            <name>EEA Release Repository</name>
            <url>http://archiva.eionet.europa.eu/repository/internal</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <repository>
            <id>archiva.snapshots</id>
            <name>Internal Snapshot Repository</name>
            <url>http://archiva.eionet.europa.eu/repository/snapshots/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>

    </repositories>

    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.17</version>
        </dependency>
        <dependency>
            <groupId>${dependency.postgres.group.id}</groupId>
            <artifactId>${dependency.postgres.artifact.id}</artifactId>
            <version>${dependency.postgres.version}</version>
        </dependency>
        <dependency>
            <groupId>eu.europa.ec</groupId>
            <artifactId>aqrmodel</artifactId>
            <version>0.1-SNAPSHOT</version>
        </dependency>
        <!--ecas-->
        <dependency>
            <groupId>eu.europa.ec.digit.iam.ecas.client</groupId>
            <artifactId>ecas-tomcat-5.5</artifactId>
            <version>3.6.3</version>
            <scope>provided</scope> 
        </dependency>
        <!--cas-->
<!--        <dependency>
            <groupId>org.jasig.cas</groupId>
            <artifactId>cas-client-core</artifactId>
            <version>3.1.10</version>
        </dependency>-->
<!--        <dependency>
            <groupId>org.jasig.cas</groupId>
            <artifactId>cas-server</artifactId>
            <version>3.5.2.1</version>
        </dependency>-->       
        
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.stripes</groupId>
            <artifactId>stripes</artifactId>
            <version>1.5.7</version>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4.7</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>1.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.stripesstuff</groupId>
            <artifactId>stripesstuff</artifactId>
            <version>0.4.1</version>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>jsr250-api</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.xml.bind</groupId>
            <artifactId>jaxb-impl</artifactId>
            <version>2.2.5.1</version>
        </dependency>
        <dependency>
          <groupId>org.liquibase</groupId>
          <artifactId>liquibase-core</artifactId>
          <version>3.4.2</version>
        </dependency>
    </dependencies>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <persistence.unitname>Aqrsystem</persistence.unitname>
        <persistence.transactiontpye>RESOURCE_LOCAL</persistence.transactiontpye>
        <persistence.jdbc.driver>org.postgresql.Driver</persistence.jdbc.driver>
        <eclipselink.ddl-generation>create-tables</eclipselink.ddl-generation>
        <dependency.postgres.group.id>org.postgresql</dependency.postgres.group.id>
        <dependency.postgres.artifact.id>postgresql</dependency.postgres.artifact.id>
        <dependency.postgres.version>9.3-1100-jdbc4</dependency.postgres.version>
        <netbeans.hint.license>aq-license</netbeans.hint.license>
        <netbeans.hint.deploy.server>Tomcat</netbeans.hint.deploy.server>
        <maven.build.timestamp.format>yyyy-MM-dd'T'HHmm</maven.build.timestamp.format>
    </properties>

    <profiles>
        
        <profile>
          <id>distribution-profile</id>
          <activation>
            <property>
              <name>env</name>
              <value>deveepure</value>
            </property>
            <activeByDefault>true</activeByDefault>
          </activation>
          <properties>
            <!-- Database configurations -->
            <persistence.jdbc.url>jdbc:postgresql://your_server_url:your_port_number/your_database_name</persistence.jdbc.url>
            <persistence.jdbc.username>your_username</persistence.jdbc.username>
            <persistence.jdbc.password>your_password</persistence.jdbc.password>

            <!-- Loggers configurations -->
            <log.file.name>your_path_to_log_file/aqrsystem.log</log.file.name>
          </properties>
        </profile>

        <profile>
          <id>docker</id>
          <activation>
            <activeByDefault>false</activeByDefault>
          </activation>
          <properties>
            <tomcat.port>8780</tomcat.port>
            <!-- Database configurations -->
            <persistence.jdbc.url>jdbc:postgresql://database:5432/aqrsystem</persistence.jdbc.url>
            <persistence.jdbc.username>postgres</persistence.jdbc.username>
            <persistence.jdbc.password>testpassword</persistence.jdbc.password>
            <!-- Loggers configurations -->
            <log.file.name>aqrsystem.log</log.file.name>
          </properties>

          <dependencies>
            <dependency>
                <groupId>eionet</groupId>
                <artifactId>jolokia</artifactId>
                <version>1.0-SNAPSHOT</version>
                <type>war</type>
                <scope>runtime</scope> 
            </dependency>

            <dependency>
              <groupId>log4j</groupId>
              <artifactId>log4j</artifactId>
              <version>1.2.17</version>
            </dependency>
          </dependencies>

          <build>
            <plugins>
              <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.13.6</version>
                <configuration>
                  <verbose>true</verbose>
                  <logDate>default</logDate>
                  <autoPull>true</autoPull>
                  <images>
                    <image>
                      <alias>service</alias>
                      <name>dockerrepo.eionet.europa.eu:5000/${project.groupId}/${project.artifactId}</name>
                      <build>
                        <from>tomcat:6</from>
                        <maintainer>Søren Roug &lt;soren.roug@eea.europa.eu&gt;</maintainer>
                        <tags>
                          <tag>latest</tag>
                          <tag>${project.version}</tag>
                          <tag>${maven.build.timestamp}</tag>
                        </tags>
                        <assembly>
                          <descriptor>assembly.xml</descriptor>
                        </assembly>
                        <env>
                          <KEYSTORE_PASS>changeit</KEYSTORE_PASS>
                        </env>
                        <!--
			<volumes>
                          <volume>/config</volume>
			</volumes>
                        -->
                        <runCmds>
                          <run>apt-get update</run>
                          <run>apt-get install -y zip</run>
                          <run>rm -rf /var/lib/apt/lists/*</run>
                          <run>keytool -import -noprompt -v -keystore cacerts -storepass ${KEYSTORE_PASS} -alias EuropeanCommission -file /maven/certs/EuropeanCommission.cer</run>
                          <run>keytool -import -noprompt -v -keystore cacerts -storepass ${KEYSTORE_PASS} -alias CommisSign -file /maven/certs/CommisSign.cer</run>

                          <run>rm -rf $CATALINA_HOME/webapps/*</run>
                          <run>cp -r /maven/tomcat /usr/local</run>
                          <run>rm -f $CATALINA_HOME/conf/logging.properties</run>
                        </runCmds>
                        <optimise>true</optimise>
                        <ports>
                          <port>8080</port>
                          <port>8009</port>
                        </ports>
                        <cmd>/maven/startup.sh</cmd>
                      </build>

                      <run>
                        <hostname>papers</hostname>
                        <env>
                          <CATALINA_OPTS>-Djava.security.egd=file:/dev/./urandom</CATALINA_OPTS>
                          <SERVER_NAME>localhost</SERVER_NAME>
                          <SERVER_PORT>${tomcat.port}</SERVER_PORT>
                          <DB_URL>jdbc:postgresql://database:5432/aqrsystem</DB_URL>
                          <DB_USERNAME>postgres</DB_USERNAME>
                          <DB_PASSWORD>testpassword</DB_PASSWORD>
                          <DB_DRIVER>org.postgresql.Driver</DB_DRIVER>
                        </env>
                        <ports>
                          <port>tomcat.port:8080</port>
                        </ports>
                        <links>
                          <link>database:database</link>
                        </links>
                        <wait>
                          <http>
                            <!-- Check for this URL to return a 200 return code .... -->
                            <url>http://${docker.host.address}:${tomcat.port}/</url>
                          </http>
                          <!-- ... but at max 20 seconds -->
                          <time>20000</time>
                        </wait>
                        <log>
                          <prefix>TC</prefix>
                          <color>cyan</color>
                        </log>
                      </run>
                    </image>

                    <!-- This image is rebuilt every time. It is not suitable for persistent data -->
                    <image>
                      <alias>database</alias>
                      <name>dockerrepo.eionet.europa.eu:5000/${project.groupId}/${project.artifactId}-testdb</name>
                      <build>
                        <from>postgres:9.0</from>
                        <maintainer>Søren Roug &lt;soren.roug@eea.europa.eu&gt;</maintainer>
                        <tags>
                          <tag>latest</tag>
                          <tag>${project.version}</tag>
                        </tags>
                        <assembly>
                          <descriptor>assembly-db.xml</descriptor>
                        </assembly>
                        <env>
                          <POSTGRES_PASSWORD>testpassword</POSTGRES_PASSWORD>
                          <POSTGRES_DB>aqrsystem</POSTGRES_DB>
                        </env>
<!--                    Will be used to run in case database is created from sql files    
                        <runCmds>
                          <run>mv /maven/docker-entrypoint-initdb.d/* /docker-entrypoint-initdb.d</run>
                        </runCmds>-->
                        <ports>
                          <port>5432</port>
                        </ports>
                      </build>
                      <run>
                      <!--
			<volumes>
			  <bind>
			    <volume>${project.basedir}/data:/var/lib/postgresql/data</volume>
			  </bind>
			</volumes>
                      -->
                        <ports>
                          <port>database.port:5432</port>
                        </ports>
                        <wait>
                          <log>PostgreSQL init process complete; ready for start up.</log>
                          <time>60000</time>
                        </wait>
                        <log>
                          <prefix>DB</prefix>
                          <color>blue</color>
                        </log>
                      </run>
                    </image>
                  </images>
                </configuration>

                <!-- Hooking into the lifecycle -->
                <executions>
                  <execution>
                    <id>start</id>
                    <phase>pre-integration-test</phase>
                    <goals>
                      <goal>build</goal>
                      <goal>start</goal>
                    </goals>
                  </execution>
                  <execution>
                    <id>stop</id>
                    <phase>post-integration-test</phase>
                    <goals>
                      <goal>stop</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>

              <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18.1</version>
                <configuration>
                  <systemPropertyVariables>
                    <log.url>http://${docker.host.address}:${tomcat.port}/</log.url>
                    <db.url>jdbc:postgresql://${docker.host.address}:${database.port}/aqrsystem</db.url>
                  </systemPropertyVariables>
                </configuration>
                <executions>
                  <execution>
                    <goals>
                      <goal>integration-test</goal>
                      <goal>verify</goal>
                    </goals>
                  </execution>
                </executions>
              </plugin>

            </plugins>
          </build>
        </profile>
    </profiles>
</project>
